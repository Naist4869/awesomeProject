// 定义项目 API 的 proto 文件 可以同时描述 gRPC 和 HTTP API
// protobuf 文件参考:
//  - https://developers.google.com/protocol-buffers/
syntax = "proto3";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

// package 命名使用 {appid}.{version} 的方式, version 形如 v1, v2 ..
package demo.service.v1;

// NOTE: 最后请删除这些无用的注释 (゜-゜)つロ

option go_package = "api";
option (gogoproto.goproto_enum_prefix_all) = false;
option (gogoproto.goproto_getters_all) = false;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;

service FileSystem {
  rpc Ping(.google.protobuf.Empty) returns (.google.protobuf.Empty);
  //  rpc CategoryGoodsGet(CategoryGoodsGetReq)returns(CategoryGoodsRespList){
  //    option (google.api.http) = {
  //      get: "/kratos-demo/categoryGoodsGet"
  //    };
  //  };
  rpc MediaIDGet(MediaIDReq)returns(MediaIDResp);

}

service TBK{
  rpc Ping(.google.protobuf.Empty) returns (.google.protobuf.Empty);
  rpc TitleConvertTBKey(TitleConvertTBKeyReq) returns(TitleConvertTBKeyResp);
  rpc KeyConvertKey(KeyConvertKeyReq) returns(KeyConvertKeyResp);
}


message CategoryGoodsGetReq{
  int64 parentId = 1 [(gogoproto.jsontag) = 'parentId', (gogoproto.moretags) = 'form:"parentId" binding:"required"'];
  int64 grade = 2 [(gogoproto.jsontag) = 'grade', (gogoproto.moretags) = 'form:"grade" binding:"required"'];
}
message CategoryGoodsResp{
  int64 grade = 1  [(gogoproto.jsontag) = 'grade'];
  string name = 2 [(gogoproto.jsontag) = 'name'];
  int64 id = 3 [(gogoproto.jsontag) = 'id'];
  int64 parentId = 4 [(gogoproto.jsontag) = 'parentId'];
}
message goodsJingFenQueryReq{
  int32 eliteId = 1 [(gogoproto.jsontag) = 'eliteId'];// 频道id：1-好券商品,2-超级大卖场,10-9.9专区,22-热销爆品,23-为你推荐,24-数码家电,25-超市,26-母婴玩具,27-家具日用,28-美妆穿搭,29-医药保健,30-图书文具,31-今日必推,32-品牌好货,33-秒杀商品,34-拼购商品,109-新品首发,110-自营,125-首购商品,129-高佣榜单,130-视频商品
  int32 pageIndex = 2 [(gogoproto.jsontag) = 'pageIndex,omitempty'];  // 页码，默认1

  int32 pageSize = 3 [(gogoproto.jsontag) = 'pageSize,omitempty'];  // 每页数量，默认20，上限50

  string sortName = 4[(gogoproto.jsontag) = 'sortName,omitempty'];  // 排序字段(price：单价, commissionShare：佣金比例, commission：佣金， inOrderCount30DaysSku：sku维度30天引单量，comments：评论数，goodComments：好评数)

  string sort = 5[(gogoproto.jsontag) = 'sort,omitempty'];  // asc,desc升降序,默认降序

  string pid = 6[(gogoproto.jsontag) = 'pid,omitempty'];  // 联盟id_应用id_推广位id，三段式

  string fields = 7[(gogoproto.jsontag) = 'fields,omitempty'];  // 支持出参数据筛选，逗号,分隔，目前可用：videoInfo
}
message goodsJingFenResp{
  CategoryInfo categoryInfo = 1[(gogoproto.jsontag) = 'categoryInfo'];
  message CategoryInfo{
    int32  Cid1 = 1  [(gogoproto.jsontag) = 'cid1'];    // 一级类目ID
    string  Cid1Name = 2 [(gogoproto.jsontag) = 'cid1Name']; // 一级类目名称
    int32  Cid2 = 3 [(gogoproto.jsontag) = 'cid2'];     // 二级类目ID
    string Cid2Name = 4 [(gogoproto.jsontag) = 'cid2Name']; // 二级类目名称
    int32  Cid3 = 5 [(gogoproto.jsontag) = 'cid3'];    // 三级类目ID
    string Cid3Name = 6 [(gogoproto.jsontag) = 'cid3Name']; // 三级类目名称
  }
  int32 comments = 2[(gogoproto.jsontag) = 'comments']; // 评论数
  CommissionInfo commissionInfo = 3[(gogoproto.jsontag) = 'commissionInfo'];
  message CommissionInfo{
    float commission = 1 [(gogoproto.jsontag) = 'commission'];  // 佣金 22.68
    float commissionShare = 2[(gogoproto.jsontag) = 'commissionShare'];    // 佣金比例 50
    float couponCommission = 3[(gogoproto.jsontag) = 'couponCommission,omitempty'];    // 券后佣金 12.68
    float plusCommissionShare = 4[(gogoproto.jsontag) = 'plusCommissionShare,omitempty'];  // plus佣金比例(即将上线) 50
  }
  CouponInfo couponInfo = 4 ;
  message CouponInfo{
    repeated CouponList couponList = 1;
  }
}

message CouponList{

}
message CategoryGoodsRespList{
  repeated CategoryGoodsResp  data = 1;
}

message MediaIDReq{
  string  fakeID = 1;
  int64 timestamp = 2;
}

message MediaIDResp{
  string MediaID = 1;
}
message KeyConvertKeyReq{
  string FromKey = 1 ;
  string UserID = 2 ;
}
message KeyConvertKeyResp{
  string ToKey = 1 ;
  string Price = 2;
  string Rebate = 3;
  string Title = 4;
  string PicURL = 5;
}
message TitleConvertTBKeyReq{
  string Title = 1;
}
message TitleConvertTBKeyResp{
  string TBKey = 1;
}